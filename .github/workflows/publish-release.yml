name: "Publish Release"

on:
  release:
    types: ["published"]

jobs:
  publish_windows:
    
    runs-on: windows-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      WORK_DIR_PATH: ${{ github.RUNNER_TEMP }}

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v3"
        with:
          dotnet-version: 8.x

      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test
          
      - name: Publish
        run: |
          cd .\NadekoHub\
          dotnet publish -c Release -r win-x64 -o "$env:WORK_DIR_PATH\build\NadekoHub_win-x64" --self-contained
          dotnet publish -c Release -r win-arm64 -o "$env:WORK_DIR_PATH\build\NadekoHub_win-arm64" --self-contained
          cd ..\

      - name: Package
        run: |
          New-Item -ItemType Directory -Path "$env:WORK_DIR_PATH\zips"
          Compress-Archive -Path "$env:WORK_DIR_PATH\build\NadekoHub_win-x64" -DestinationPath "$env:WORK_DIR_PATH\zips\NadekoHub_win-x64.zip"
          Compress-Archive -Path "$env:WORK_DIR_PATH\build\NadekoHub_win-arm64" -DestinationPath "$env:WORK_DIR_PATH\zips\NadekoHub_win-arm64.zip"

      - name: "Upload Packages To Github Release"
        uses: "ncipollo/release-action@v1.13.0"
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: ${{ env.WORK_DIR_PATH }}\zips\*
          token: ${{ secrets.REPO_GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          omitBodyDuringUpdate: true # We don't want to update the body of the release.
          omitNameDuringUpdate: true # We don't want to update the name of the release.

  publish_linux:

    runs-on: ubuntu-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v3"
        with:
          dotnet-version: 8.x

      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test

      - name: Publish
        run: |
          cd ./NadekoHub
          dotnet publish -c Release -r linux-x64 -o ~/build/NadekoHub_linux-x64 --self-contained
          dotnet publish -c Release -r linux-arm64 -o ~/build/NadekoHub_linux-arm64 --self-contained
          cd ../

      - name: Package
        run: |
          mkdir -p ~/zips
          cd ~/build
          zip -r9 ~/zips/NadekoHub_linux-x64.zip ./NadekoHub_linux-x64
          zip -r9 ~/zips/NadekoHub_linux-arm64.zip ./NadekoHub_linux-arm64

      - name: "Upload Packages To Github Release"
        uses: "ncipollo/release-action@v1.13.0"
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "~/zips/*"
          token: ${{ secrets.REPO_GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          omitBodyDuringUpdate: true # We don't want to update the body of the release.
          omitNameDuringUpdate: true # We don't want to update the name of the release.

  publish_macos:

    runs-on: macos-latest

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup .NET"
        uses: "actions/setup-dotnet@v3"
        with:
          dotnet-version: 8.x

      - name: Build
        run: dotnet build -c Release

      - name: Test
        run: dotnet test

      - name: Publish
        run: |
          cd ./NadekoHub
          dotnet publish -c Release -r osx-x64 -o ~/build/NadekoHub_osx-x64 --self-contained
          dotnet publish -c Release -r osx-arm64 -o ~/build/NadekoHub_osx-arm64 --self-contained
          cd ../

      - name: Package
        run: |
          mkdir -p ~/zips
          cd ~/build
          zip -r9 ~/zips/NadekoHub_osx-x64.zip ./NadekoHub_osx-x64
          zip -r9 ~/zips/NadekoHub_osx-arm64.zip ./NadekoHub_osx-arm64

      - name: "Upload Packages To Github Release"
        uses: "ncipollo/release-action@v1.13.0"
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "~/zips/*"
          token: ${{ secrets.REPO_GITHUB_TOKEN }}
          tag: ${{ github.event.release.tag_name }}
          omitBodyDuringUpdate: true # We don't want to update the body of the release.
          omitNameDuringUpdate: true # We don't want to update the name of the release.